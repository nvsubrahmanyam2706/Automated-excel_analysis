# report_generator.py
from docx import Document
from docx.shared import Inches, Pt
from docx.enum.text import WD_ALIGN_PARAGRAPH
from io import BytesIO
import tempfile
import os
from datetime import datetime


def generate_word_report(df, prompt, results_text, visualizations):
    """
    Generates a professional Word report combining:
    - User prompt
    - Dataset overview
    - Gemini textual insights (results_text)
    - Gemini & KPI visualizations (visualizations)
    """

    doc = Document()

    # ---------- Title ----------
    title = doc.add_heading("üìä AI Excel Analysis Report", 0)
    title.alignment = WD_ALIGN_PARAGRAPH.CENTER
    doc.add_paragraph(f"Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

    # ---------- Section 1: User Prompt ----------
    doc.add_heading("User Prompt", level=1)
    doc.add_paragraph(prompt or "No prompt provided.")

    # ---------- Section 2: Dataset Overview ----------
    doc.add_heading("Dataset Overview", level=1)
    doc.add_paragraph(f"Shape: {df.shape[0]} rows √ó {df.shape[1]} columns")
    doc.add_heading("Missing Values", level=2)
    doc.add_paragraph(df.isnull().sum().to_string())

    doc.add_heading("First 5 Rows", level=2)
    doc.add_paragraph(df.head().to_string())

    # ---------- Section 3: Gemini Model Insights ----------
    doc.add_heading("Gemini Model Insights", level=1)
    if results_text and results_text.strip():
        for line in results_text.split("\n"):
            if line.strip().startswith("#"):
                para = doc.add_paragraph(line.strip("# ").strip())
                para.runs[0].bold = True
            else:
                doc.add_paragraph(line)
    else:
        doc.add_paragraph("No textual insights captured from Gemini model.")

    # ---------- Section 4: KPI Dashboard Visuals ----------
    if visualizations:
        doc.add_heading("KPI Dashboard Visualizations", level=1)
        for i, vis in enumerate(visualizations):
            try:
                # Save image bytes to temp file
                with tempfile.NamedTemporaryFile(delete=False, suffix=".png") as tmp_file:
                    tmp_file.write(vis)
                    tmp_path = tmp_file.name

                doc.add_picture(tmp_path, width=Inches(5.5))
                last_paragraph = doc.paragraphs[-1]
                last_paragraph.alignment = WD_ALIGN_PARAGRAPH.CENTER

                os.remove(tmp_path)
            except Exception as e:
                doc.add_paragraph(f"‚ö†Ô∏è Could not insert visualization {i+1}: {e}")
    else:
        doc.add_paragraph("No visualizations available.")

    # ---------- Section 5: Footer ----------
    doc.add_paragraph()
    footer = doc.add_paragraph("Generated by Gemini AI Excel Analyzer", style="Normal")
    footer.alignment = WD_ALIGN_PARAGRAPH.CENTER
    footer.runs[0].font.size = Pt(10)

    # ---------- Save & Return ----------
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer
